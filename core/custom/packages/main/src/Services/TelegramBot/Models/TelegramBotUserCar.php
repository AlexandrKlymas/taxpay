<?php
namespace EvolutionCMS\Main\Services\TelegramBot\Models;


use EvolutionCMS\Main\Services\FinesSearcher\Models\Fine;
use EvolutionCMS\Main\Services\TelegramBot\TelegramBot;
use Illuminate\Database\Eloquent\Relations\HasMany;

/**
 * EvolutionCMS\Main\Services\TelegramBot\Models\TelegramBotUserCar
 *
 * @property int $id
 * @property int $telegram_bot_user_id
 * @property string $car_number
 * @property string $document_type
 * @property array $document_info
 * @property TelegramBotUser $chat
 * @property Fine[] $fines
 * @property \Illuminate\Support\Carbon|null $checked_at
 * @property \Illuminate\Support\Carbon|null $created_at
 * @property \Illuminate\Support\Carbon|null $updated_at
 * @method static \Illuminate\Database\Eloquent\Builder|TelegramBotUserCar newModelQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|TelegramBotUserCar newQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|TelegramBotUserCar query()
 * @method static \Illuminate\Database\Eloquent\Builder|TelegramBotUserCar whereCarNumber($value)
 * @method static \Illuminate\Database\Eloquent\Builder|TelegramBotUserCar whereCheckedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|TelegramBotUserCar whereCreatedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|TelegramBotUserCar whereDocumentInfo($value)
 * @method static \Illuminate\Database\Eloquent\Builder|TelegramBotUserCar whereDocumentType($value)
 * @method static \Illuminate\Database\Eloquent\Builder|TelegramBotUserCar whereId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|TelegramBotUserCar whereTelegramBotUserId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|TelegramBotUserCar whereUpdatedAt($value)
 * @mixin \Eloquent
 */
class TelegramBotUserCar extends \Eloquent
{
    protected $dates = [
        'checked_at',
        'created_at',
        'updated_at',
    ];

    protected $casts = [
        'document_info'=>'array'
    ];

    protected $guarded = ['id'];

    public function delete()
    {
        FineTelegramBotUser::where('telegram_bot_user_id',$this->telegram_bot_user_id)->delete();

        return parent::delete(); // TODO: Change the autogenerated stub
    }


    public function chat(){
        return $this->belongsTo(TelegramBotUser::class,'telegram_bot_user_id','id');
    }

    public function fines(){
        return $this->hasMany(Fine::class,'telegram_bot_user_id','telegram_bot_user_id');

    }
}